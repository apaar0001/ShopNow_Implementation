{"ast":null,"code":"\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { FaHeart, FaUser, FaShoppingCart, FaSearch } from 'react-icons/fa';\n// import { useNavigate } from 'react-router-dom';\n// import './Home.css';\n\n// function Home() {\n//   const navigate = useNavigate();\n//   const [products, setProducts] = useState({ electronics: [], decorations: [], clothing: [] });\n//   const [cartItems, setCartItems] = useState({});\n\n//   useEffect(() => {\n//     const fetchProducts = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:8000/api/products/');\n//         setProducts(response.data);\n//       } catch (error) {\n//         console.error('Error fetching products:', error);\n//       }\n//     };\n\n//     fetchProducts();\n//   }, []);\n\n//   const fetchCartItemQuantities = async (productId) => {\n//     const userEmail = localStorage.getItem('user_email');\n//     if (userEmail) {\n//       try {\n//         const response = await axios.post(\n//           'http://localhost:8000/api/get_cart_quantity/',\n//           {\n//             user_email: userEmail,\n//             product_id: productId,\n//           }\n//         );\n//         const { quantity } = response.data;\n//         setCartItems((prevItems) => ({\n//           ...prevItems,\n//           [productId]: quantity,\n//         }));\n//       } catch (error) {\n//         console.error('Error fetching cart item quantity:', error);\n//       }\n//     }\n//   };\n\n//   const addItemsToCart = async (productName, quantity) => {\n//     const userEmail = localStorage.getItem('user_email');\n//     if (userEmail) {\n//       try {\n//         const response = await axios.post(\n//           'http://localhost:8000/api/add_to_cart/',\n//           {\n//             user_email: userEmail,\n//             category: getCategoryForProduct(productName),\n//             product_id: getProductID(productName),\n//             quantity: quantity.toString(),\n//           }\n//         );\n//         console.log(response.data.message); // Log success message\n//         fetchCartItemQuantities(getProductID(productName)); // Update cart items after adding\n//       } catch (error) {\n//         console.error('Error adding item to cart:', error);\n//       }\n//     }\n//   };\n\n//   const addToCart = (productName) => {\n//     addItemsToCart(productName, 1); // Default quantity is 1\n//   };\n\n//   const increaseQuantity = (productName) => {\n//     const newQuantity = cartItems[productName] ? cartItems[productName] + 1 : 1;\n//     addItemsToCart(productName, newQuantity);\n//   };\n\n//   const decreaseQuantity = (productName) => {\n//     if (cartItems[productName] === 1) {\n//       const { [productName]: removedItem, ...updatedCart } = cartItems;\n//       setCartItems(updatedCart);\n//     } else {\n//       const newQuantity = cartItems[productName] ? cartItems[productName] - 1 : 0;\n//       addItemsToCart(productName, newQuantity);\n//     }\n//   };\n\n//   const getCategoryForProduct = (productName) => {\n//     // Implement logic to get category based on product name\n//     // This is just a placeholder, replace it with your actual logic\n//     if (products.electronics.some(product => product.name === productName)) {\n//       return 'electronics';\n//     } else if (products.decorations.some(product => product.name === productName)) {\n//       return 'decorations';\n//     } else if (products.clothing.some(product => product.name === productName)) {\n//       return 'clothing';\n//     }\n//     return 'unknown'; // Default category if not found\n//   };\n\n//   const getProductID = (productName) => {\n//     // Implement logic to get product ID based on product name\n//     // This is just a placeholder, replace it with your actual logic\n//     // Assuming products have a unique ID property\n//     const product = products.electronics.find(product => product.name === productName);\n//     return product ? product.id : null;\n//   };\n\n//   const renderProducts = (category) => (\n//     <div className=\"product-grid\">\n//       {products[category].slice(0, 3).map((product) => (\n//         <div className=\"product-card\" key={product.name}>\n//           <img src={product.url} alt={product.name} />\n//           <h3>{product.name}</h3>\n//           <div className=\"priceCart\" style={{ display: 'flex', alignItems: 'flex-start' }}>\n//             <p>${product.price}</p>\n//             <div className=\"add-to-cart\">\n//               {cartItems[product.name] ? (\n//                 <div className=\"quantity-controls\">\n//                   <button onClick={() => decreaseQuantity(product.name)}>-</button>\n//                   <span>{cartItems[product.name]}</span>\n//                   <button onClick={() => increaseQuantity(product.name)}>+</button>\n//                 </div>\n//               ) : (\n//                 <button onClick={() => addToCart(product.name)}>\n//                   Add to Cart <FaShoppingCart />\n//                 </button>\n//               )}\n//             </div>\n//           </div>\n//         </div>\n//       ))}\n//     </div>\n//   );\n\n//   return (\n//     <div className=\"Home\">\n//       <header className=\"Home-header\">\n//         <h1 className=\"logo\">ShopNow</h1>\n//         <div className=\"header-right\">\n//           <div className=\"search-container\">\n//             <input type=\"text\" placeholder=\"Search for products\" className=\"search-input\" />\n//             <FaSearch className=\"search-icon\" />\n//           </div>\n//           <FaHeart className=\"icon\" />\n//           <FaUser className=\"icon\" onClick={() => navigate('/Profile')} />\n//           <FaShoppingCart className=\"icon\" onClick={() => navigate('/Cart')} />\n//         </div>\n//       </header>\n//       <nav className=\"Home-nav\" style={{cursor:\"pointer\"}}>\n//         <ul>\n//           <li onClick={() => navigate('/Electronics')}>Electronics</li>\n//           <li onClick={() => navigate('/Clothing')}>Clothing</li>\n//           <li onClick={() => navigate('/Decorations')}>Decorations</li>\n//           {/* Add more categories as needed */}\n//         </ul>\n//       </nav>\n//       <main className=\"Home-main\">\n//         <section className=\"Home-section\">\n//           <h2>Featured Electronics</h2>\n//           {renderProducts('electronics')}\n//         </section>\n//         <section className=\"Home-section\">\n//           <h2>Trending Clothing</h2>\n//           {renderProducts('clothing')}\n//         </section>\n//         <section className=\"Home-section\">\n//           <h2>Decorations & Home</h2>\n//           {renderProducts('decorations')}\n//         </section>\n//         {/* Additional categories can be added as needed */}\n//       </main>\n//       <footer className=\"Home-footer\">\n//         <p>&copy; ShopNow - Built With Love</p>\n//       </footer>\n//     </div>\n//   );\n// }\n\n// export default Home;","map":{"version":3,"names":[],"sources":["/home/piyush/AUTH_SYSTEM/frontend/src/Components/Home.js"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { FaHeart, FaUser, FaShoppingCart, FaSearch } from 'react-icons/fa';\n// import { useNavigate } from 'react-router-dom';\n// import './Home.css';\n\n// function Home() {\n//   const navigate = useNavigate();\n//   const [products, setProducts] = useState({ electronics: [], decorations: [], clothing: [] });\n//   const [cartItems, setCartItems] = useState({});\n\n//   useEffect(() => {\n//     const fetchProducts = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:8000/api/products/');\n//         setProducts(response.data);\n//       } catch (error) {\n//         console.error('Error fetching products:', error);\n//       }\n//     };\n\n//     fetchProducts();\n//   }, []);\n\n//   const fetchCartItemQuantities = async (productId) => {\n//     const userEmail = localStorage.getItem('user_email');\n//     if (userEmail) {\n//       try {\n//         const response = await axios.post(\n//           'http://localhost:8000/api/get_cart_quantity/',\n//           {\n//             user_email: userEmail,\n//             product_id: productId,\n//           }\n//         );\n//         const { quantity } = response.data;\n//         setCartItems((prevItems) => ({\n//           ...prevItems,\n//           [productId]: quantity,\n//         }));\n//       } catch (error) {\n//         console.error('Error fetching cart item quantity:', error);\n//       }\n//     }\n//   };\n\n//   const addItemsToCart = async (productName, quantity) => {\n//     const userEmail = localStorage.getItem('user_email');\n//     if (userEmail) {\n//       try {\n//         const response = await axios.post(\n//           'http://localhost:8000/api/add_to_cart/',\n//           {\n//             user_email: userEmail,\n//             category: getCategoryForProduct(productName),\n//             product_id: getProductID(productName),\n//             quantity: quantity.toString(),\n//           }\n//         );\n//         console.log(response.data.message); // Log success message\n//         fetchCartItemQuantities(getProductID(productName)); // Update cart items after adding\n//       } catch (error) {\n//         console.error('Error adding item to cart:', error);\n//       }\n//     }\n//   };\n\n//   const addToCart = (productName) => {\n//     addItemsToCart(productName, 1); // Default quantity is 1\n//   };\n\n//   const increaseQuantity = (productName) => {\n//     const newQuantity = cartItems[productName] ? cartItems[productName] + 1 : 1;\n//     addItemsToCart(productName, newQuantity);\n//   };\n\n//   const decreaseQuantity = (productName) => {\n//     if (cartItems[productName] === 1) {\n//       const { [productName]: removedItem, ...updatedCart } = cartItems;\n//       setCartItems(updatedCart);\n//     } else {\n//       const newQuantity = cartItems[productName] ? cartItems[productName] - 1 : 0;\n//       addItemsToCart(productName, newQuantity);\n//     }\n//   };\n\n//   const getCategoryForProduct = (productName) => {\n//     // Implement logic to get category based on product name\n//     // This is just a placeholder, replace it with your actual logic\n//     if (products.electronics.some(product => product.name === productName)) {\n//       return 'electronics';\n//     } else if (products.decorations.some(product => product.name === productName)) {\n//       return 'decorations';\n//     } else if (products.clothing.some(product => product.name === productName)) {\n//       return 'clothing';\n//     }\n//     return 'unknown'; // Default category if not found\n//   };\n\n//   const getProductID = (productName) => {\n//     // Implement logic to get product ID based on product name\n//     // This is just a placeholder, replace it with your actual logic\n//     // Assuming products have a unique ID property\n//     const product = products.electronics.find(product => product.name === productName);\n//     return product ? product.id : null;\n//   };\n\n//   const renderProducts = (category) => (\n//     <div className=\"product-grid\">\n//       {products[category].slice(0, 3).map((product) => (\n//         <div className=\"product-card\" key={product.name}>\n//           <img src={product.url} alt={product.name} />\n//           <h3>{product.name}</h3>\n//           <div className=\"priceCart\" style={{ display: 'flex', alignItems: 'flex-start' }}>\n//             <p>${product.price}</p>\n//             <div className=\"add-to-cart\">\n//               {cartItems[product.name] ? (\n//                 <div className=\"quantity-controls\">\n//                   <button onClick={() => decreaseQuantity(product.name)}>-</button>\n//                   <span>{cartItems[product.name]}</span>\n//                   <button onClick={() => increaseQuantity(product.name)}>+</button>\n//                 </div>\n//               ) : (\n//                 <button onClick={() => addToCart(product.name)}>\n//                   Add to Cart <FaShoppingCart />\n//                 </button>\n//               )}\n//             </div>\n//           </div>\n//         </div>\n//       ))}\n//     </div>\n//   );\n\n//   return (\n//     <div className=\"Home\">\n//       <header className=\"Home-header\">\n//         <h1 className=\"logo\">ShopNow</h1>\n//         <div className=\"header-right\">\n//           <div className=\"search-container\">\n//             <input type=\"text\" placeholder=\"Search for products\" className=\"search-input\" />\n//             <FaSearch className=\"search-icon\" />\n//           </div>\n//           <FaHeart className=\"icon\" />\n//           <FaUser className=\"icon\" onClick={() => navigate('/Profile')} />\n//           <FaShoppingCart className=\"icon\" onClick={() => navigate('/Cart')} />\n//         </div>\n//       </header>\n//       <nav className=\"Home-nav\" style={{cursor:\"pointer\"}}>\n//         <ul>\n//           <li onClick={() => navigate('/Electronics')}>Electronics</li>\n//           <li onClick={() => navigate('/Clothing')}>Clothing</li>\n//           <li onClick={() => navigate('/Decorations')}>Decorations</li>\n//           {/* Add more categories as needed */}\n//         </ul>\n//       </nav>\n//       <main className=\"Home-main\">\n//         <section className=\"Home-section\">\n//           <h2>Featured Electronics</h2>\n//           {renderProducts('electronics')}\n//         </section>\n//         <section className=\"Home-section\">\n//           <h2>Trending Clothing</h2>\n//           {renderProducts('clothing')}\n//         </section>\n//         <section className=\"Home-section\">\n//           <h2>Decorations & Home</h2>\n//           {renderProducts('decorations')}\n//         </section>\n//         {/* Additional categories can be added as needed */}\n//       </main>\n//       <footer className=\"Home-footer\">\n//         <p>&copy; ShopNow - Built With Love</p>\n//       </footer>\n//     </div>\n//   );\n// }\n\n// export default Home;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}