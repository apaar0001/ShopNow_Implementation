{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { FaHeart, FaUser, FaShoppingCart, FaSearch, FaMinus, FaPlus } from 'react-icons/fa';\n// import { useNavigate } from 'react-router-dom';\n// import './Electronics.css';\n\n// function Electronics() {\n//   const navigate = useNavigate();\n\n//   const handleHome = () => {\n//     navigate('/Home');\n//   };\n\n//   const handleCart = () => {\n//     navigate('/Cart');\n//   };\n\n//   const handleProfile = () => {\n//     navigate('/Profile');\n//   };\n\n//   const [products, setProducts] = useState({ electronics: [] });\n//   const [cartItems, setCartItems] = useState({});\n\n//   useEffect(() => {\n//     const fetchProducts = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:8000/api/products/');\n//         setProducts({ electronics: response.data.electronics });\n//       } catch (error) {\n//         console.error('Error fetching products:', error);\n//       }\n//     };\n\n//     fetchProducts();\n//   }, []);\n\n//   useEffect(() => {\n//     const fetchCartQuantities = async () => {\n//       const userEmail = localStorage.getItem('user_email');\n//       if (!userEmail) return;\n\n//       const updatedCartItems = {};\n//       updatedCartItems['electronics'] = {};\n//       for (const product of products.electronics) {\n//         const quantity = await fetchCartItemQuantities(product.id, 'electronics');\n//         updatedCartItems['electronics'][product.id] = quantity;\n//       }\n//       setCartItems(updatedCartItems);\n//     };\n\n//     fetchCartQuantities();\n//   }, [products]);\n\n//   const fetchCartItemQuantities = async (productId, category) => {\n//     try {\n//       const userEmail = localStorage.getItem('user_email');\n//       const response = await axios.post('http://localhost:8000/api/get_cart_quantity/', {\n//         user_email: userEmail,\n//         product_id: productId,\n//         category: category,\n\n//       });\n//       return response.data.quantity;\n//     } catch (error) {\n//       console.error('Error fetching cart item quantity:', error);\n//       return 0;\n//     }\n//   };\n\n//   const handleAddToCart = async (productId) => {\n//     const userEmail = localStorage.getItem('user_email');\n//     if (!userEmail) return;\n\n//     try {\n//       await axios.post('http://localhost:8000/api/add_to_cart/', {\n//         user_email: userEmail,\n//         category: 'electronics',\n//         product_id: productId,\n//         quantity: 1, // Assuming default quantity is 1 for now\n//       });\n//       const quantity = await fetchCartItemQuantities(productId, 'electronics');\n//       setCartItems((prevItems) => ({\n//         ...prevItems,\n//         electronics: { ...prevItems.electronics, [productId]: quantity },\n//       }));\n//     } catch (error) {\n//       console.error('Error adding item to cart:', error);\n//     }\n//   };\n\n//   const increaseQuantity = async (productId, category) => {\n//     const userEmail = localStorage.getItem('user_email');\n//     if (!userEmail) return;\n\n//     try {\n//       await axios.post('http://localhost:8000/api/add_to_cart/', {\n//         user_email: userEmail,\n//         category: category,\n//         product_id: productId,\n//         quantity: 1,\n//       });\n//       const quantity = await fetchCartItemQuantities(productId, category);\n//       setCartItems((prevItems) => ({\n//         ...prevItems,\n//         [category]: { ...prevItems[category], [productId]: quantity },\n//       }));\n//     } catch (error) {\n//       console.error('Error increasing quantity:', error);\n//     }\n//   };\n\n//   const decreaseQuantity = async (productId, category) => {\n//     const userEmail = localStorage.getItem('user_email');\n//     if (!userEmail) return;\n\n//     try {\n//       await axios.post('http://localhost:8000/api/delete_one_from_cart/', {\n//         user_email: userEmail,\n//         product_id: productId,\n//         category: category,\n//       });\n//       const quantity = await fetchCartItemQuantities(productId, category);\n//       setCartItems((prevItems) => ({\n//         ...prevItems,\n//         [category]: { ...prevItems[category], [productId]: quantity },\n//       }));\n//     } catch (error) {\n//       console.error('Error decreasing quantity:', error);\n//     }\n//   };\n\n//   const renderCartButton = (productId) => {\n//     const count = cartItems['electronics'] && cartItems['electronics'][productId] || 0;\n//     return count > 0 ? (\n//       <div className=\"quantity-controls\">\n//         <button onClick={() => decreaseQuantity(productId, 'electronics')}><FaMinus /></button>\n//         <span>{count}</span>\n//         <button onClick={() => increaseQuantity(productId, 'electronics')}><FaPlus /></button>\n//       </div>\n//     ) : (\n//       <button className=\"add-to-cart-button\" onClick={() => handleAddToCart(productId)}>\n//         Add to Cart <FaShoppingCart />\n//       </button>\n//     );\n//   };\n\n//   const renderProducts = () => (\n//     <div className=\"product-grid\">\n//       {products.electronics.map(product => (\n//         <div className=\"product-card\" key={product.name}>\n//           <img src={product.url} alt={product.name} />\n//           <h3>{product.name}</h3>\n//           <div style={{ display: 'flex', marginTop: '10px' }}>\n//             <p>${product.price}</p>\n//             <div style={{ marginLeft: 'auto' }}>\n//               {renderCartButton(product.id)}\n//             </div>\n//           </div>\n//         </div>\n//       ))}\n//     </div>\n//   );\n\n//   return (\n//     <div className=\"Electronics\">\n//       <header className=\"Electronics-header\">\n//         <h1 className=\"logo\">ShopNow</h1>\n//         <div className=\"header-right\">\n//           <div className=\"search-container\">\n//             <input type=\"text\" placeholder=\"Search for products\" className=\"search-input\" />\n//             <FaSearch className=\"search-icon\" />\n//           </div>\n\n//           <FaHeart className=\"icon\" />\n//           <FaUser className=\"icon\" onClick={handleProfile} />\n//           <FaShoppingCart className=\"icon\" onClick={handleCart} />\n//         </div>\n//       </header>\n//       <nav className=\"Electronics-nav\">\n//         <ul>\n//           <li><div onClick={handleHome}>Home</div></li>\n//           <li><div>Electronics</div></li>\n//         </ul>\n//       </nav>\n//       <main className=\"Electronics-main\">\n//         <section className=\"Electronics-section\">\n//           <h2>Featured Electronics</h2>\n//           {renderProducts()}\n//         </section>\n//       </main>\n//       <footer className=\"Electronics-footer\">\n//         <p>&copy; ShopNow - Built With Love</p>\n//       </footer>\n//     </div>\n//   );\n// }\n\n// export default Electronics;","map":{"version":3,"names":[],"sources":["/home/piyush/AUTH_SYSTEM/frontend/src/Components/Electronics.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { FaHeart, FaUser, FaShoppingCart, FaSearch, FaMinus, FaPlus } from 'react-icons/fa';\n// import { useNavigate } from 'react-router-dom';\n// import './Electronics.css';\n\n// function Electronics() {\n//   const navigate = useNavigate();\n\n//   const handleHome = () => {\n//     navigate('/Home');\n//   };\n\n//   const handleCart = () => {\n//     navigate('/Cart');\n//   };\n\n//   const handleProfile = () => {\n//     navigate('/Profile');\n//   };\n\n//   const [products, setProducts] = useState({ electronics: [] });\n//   const [cartItems, setCartItems] = useState({});\n\n//   useEffect(() => {\n//     const fetchProducts = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:8000/api/products/');\n//         setProducts({ electronics: response.data.electronics });\n//       } catch (error) {\n//         console.error('Error fetching products:', error);\n//       }\n//     };\n\n//     fetchProducts();\n//   }, []);\n\n//   useEffect(() => {\n//     const fetchCartQuantities = async () => {\n//       const userEmail = localStorage.getItem('user_email');\n//       if (!userEmail) return;\n\n//       const updatedCartItems = {};\n//       updatedCartItems['electronics'] = {};\n//       for (const product of products.electronics) {\n//         const quantity = await fetchCartItemQuantities(product.id, 'electronics');\n//         updatedCartItems['electronics'][product.id] = quantity;\n//       }\n//       setCartItems(updatedCartItems);\n//     };\n\n//     fetchCartQuantities();\n//   }, [products]);\n\n//   const fetchCartItemQuantities = async (productId, category) => {\n//     try {\n//       const userEmail = localStorage.getItem('user_email');\n//       const response = await axios.post('http://localhost:8000/api/get_cart_quantity/', {\n//         user_email: userEmail,\n//         product_id: productId,\n//         category: category,\n        \n//       });\n//       return response.data.quantity;\n//     } catch (error) {\n//       console.error('Error fetching cart item quantity:', error);\n//       return 0;\n//     }\n//   };\n\n//   const handleAddToCart = async (productId) => {\n//     const userEmail = localStorage.getItem('user_email');\n//     if (!userEmail) return;\n  \n//     try {\n//       await axios.post('http://localhost:8000/api/add_to_cart/', {\n//         user_email: userEmail,\n//         category: 'electronics',\n//         product_id: productId,\n//         quantity: 1, // Assuming default quantity is 1 for now\n//       });\n//       const quantity = await fetchCartItemQuantities(productId, 'electronics');\n//       setCartItems((prevItems) => ({\n//         ...prevItems,\n//         electronics: { ...prevItems.electronics, [productId]: quantity },\n//       }));\n//     } catch (error) {\n//       console.error('Error adding item to cart:', error);\n//     }\n//   };\n  \n//   const increaseQuantity = async (productId, category) => {\n//     const userEmail = localStorage.getItem('user_email');\n//     if (!userEmail) return;\n\n//     try {\n//       await axios.post('http://localhost:8000/api/add_to_cart/', {\n//         user_email: userEmail,\n//         category: category,\n//         product_id: productId,\n//         quantity: 1,\n//       });\n//       const quantity = await fetchCartItemQuantities(productId, category);\n//       setCartItems((prevItems) => ({\n//         ...prevItems,\n//         [category]: { ...prevItems[category], [productId]: quantity },\n//       }));\n//     } catch (error) {\n//       console.error('Error increasing quantity:', error);\n//     }\n//   };\n\n//   const decreaseQuantity = async (productId, category) => {\n//     const userEmail = localStorage.getItem('user_email');\n//     if (!userEmail) return;\n\n//     try {\n//       await axios.post('http://localhost:8000/api/delete_one_from_cart/', {\n//         user_email: userEmail,\n//         product_id: productId,\n//         category: category,\n//       });\n//       const quantity = await fetchCartItemQuantities(productId, category);\n//       setCartItems((prevItems) => ({\n//         ...prevItems,\n//         [category]: { ...prevItems[category], [productId]: quantity },\n//       }));\n//     } catch (error) {\n//       console.error('Error decreasing quantity:', error);\n//     }\n//   };\n\n//   const renderCartButton = (productId) => {\n//     const count = cartItems['electronics'] && cartItems['electronics'][productId] || 0;\n//     return count > 0 ? (\n//       <div className=\"quantity-controls\">\n//         <button onClick={() => decreaseQuantity(productId, 'electronics')}><FaMinus /></button>\n//         <span>{count}</span>\n//         <button onClick={() => increaseQuantity(productId, 'electronics')}><FaPlus /></button>\n//       </div>\n//     ) : (\n//       <button className=\"add-to-cart-button\" onClick={() => handleAddToCart(productId)}>\n//         Add to Cart <FaShoppingCart />\n//       </button>\n//     );\n//   };\n\n//   const renderProducts = () => (\n//     <div className=\"product-grid\">\n//       {products.electronics.map(product => (\n//         <div className=\"product-card\" key={product.name}>\n//           <img src={product.url} alt={product.name} />\n//           <h3>{product.name}</h3>\n//           <div style={{ display: 'flex', marginTop: '10px' }}>\n//             <p>${product.price}</p>\n//             <div style={{ marginLeft: 'auto' }}>\n//               {renderCartButton(product.id)}\n//             </div>\n//           </div>\n//         </div>\n//       ))}\n//     </div>\n//   );\n\n//   return (\n//     <div className=\"Electronics\">\n//       <header className=\"Electronics-header\">\n//         <h1 className=\"logo\">ShopNow</h1>\n//         <div className=\"header-right\">\n//           <div className=\"search-container\">\n//             <input type=\"text\" placeholder=\"Search for products\" className=\"search-input\" />\n//             <FaSearch className=\"search-icon\" />\n//           </div>\n\n//           <FaHeart className=\"icon\" />\n//           <FaUser className=\"icon\" onClick={handleProfile} />\n//           <FaShoppingCart className=\"icon\" onClick={handleCart} />\n//         </div>\n//       </header>\n//       <nav className=\"Electronics-nav\">\n//         <ul>\n//           <li><div onClick={handleHome}>Home</div></li>\n//           <li><div>Electronics</div></li>\n//         </ul>\n//       </nav>\n//       <main className=\"Electronics-main\">\n//         <section className=\"Electronics-section\">\n//           <h2>Featured Electronics</h2>\n//           {renderProducts()}\n//         </section>\n//       </main>\n//       <footer className=\"Electronics-footer\">\n//         <p>&copy; ShopNow - Built With Love</p>\n//       </footer>\n//     </div>\n//   );\n// }\n\n// export default Electronics;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}