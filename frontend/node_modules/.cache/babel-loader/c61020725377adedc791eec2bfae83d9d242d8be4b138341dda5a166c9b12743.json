{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './Payment.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Payment() {\n  _s();\n  const navigate = useNavigate();\n  const [paymentMode, setPaymentMode] = useState('');\n  const [totalQuantity, setTotalQuantity] = useState(0);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [cartItems, setCartItems] = useState([]);\n  useEffect(() => {\n    const fetchCartItems = async () => {\n      const userEmail = localStorage.getItem('user_email');\n      if (!userEmail) {\n        navigate('/Login'); // Redirect to Login if user is not logged in\n        return;\n      }\n      try {\n        // Fetch cart items info based on user_email\n        const cartItemsResponse = await axios.post('http://localhost:8000/api/get_cart_items_info', {\n          user_email: userEmail\n        });\n        const cartItemsData = cartItemsResponse.data.cart_items_info;\n        let totalQuantity = 0;\n        let totalPrice = 0;\n\n        // Fetch product info for each cart item\n        for (const item of cartItemsData) {\n          const productInfoResponse = await axios.post('http://localhost:8000/api/get_product_info', {\n            product_id: item.product_id,\n            category: item.category\n          });\n          const productInfo = productInfoResponse.data;\n          item.name = productInfo.name;\n          item.url = productInfo.url;\n          item.price = productInfo.price;\n          totalQuantity += item.quantity;\n          totalPrice += item.price * item.quantity;\n        }\n        setTotalQuantity(totalQuantity);\n        setTotalPrice(totalPrice);\n        setCartItems(cartItemsData);\n      } catch (error) {\n        console.error('Error fetching cart items:', error);\n      }\n    };\n    fetchCartItems(); // Call fetchCartItems when the component mounts\n  }, []);\n  const handlePayment = async () => {\n    if (!paymentMode) {\n      alert('Please select a payment mode.');\n      return;\n    }\n    try {\n      const userEmail = localStorage.getItem('user_email');\n      const response = await axios.post('http://localhost:8000/api/remove_product_quantity', {\n        user_email: userEmail\n      });\n      if (response.data.message) {\n        alert('Payment successful!');\n        navigate('/Home');\n      }\n    } catch (error) {\n      console.error('Error processing payment:', error);\n    }\n  };\n  const handleCancelPayment = () => {\n    navigate('/Cart');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Payment, \"lfR1pqcu7SzIs/tKNUexji4QA1g=\", false, function () {\n  return [useNavigate];\n});\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","Fragment","_Fragment","jsxDEV","_jsxDEV","Payment","_s","navigate","paymentMode","setPaymentMode","totalQuantity","setTotalQuantity","totalPrice","setTotalPrice","cartItems","setCartItems","fetchCartItems","userEmail","localStorage","getItem","cartItemsResponse","post","user_email","cartItemsData","data","cart_items_info","item","productInfoResponse","product_id","category","productInfo","name","url","price","quantity","error","console","handlePayment","alert","response","message","handleCancelPayment","_c","$RefreshReg$"],"sources":["/home/piyush/ShopNow/frontend/src/Components/Payment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './Payment.css';\n\nfunction Payment() {\n  const navigate = useNavigate();\n  const [paymentMode, setPaymentMode] = useState('');\n  const [totalQuantity, setTotalQuantity] = useState(0);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [cartItems, setCartItems] = useState([]);\n\n  useEffect(() => {\n    const fetchCartItems = async () => {\n      const userEmail = localStorage.getItem('user_email');\n      if (!userEmail) {\n        navigate('/Login'); // Redirect to Login if user is not logged in\n        return;\n      }\n\n      try {\n        // Fetch cart items info based on user_email\n        const cartItemsResponse = await axios.post('http://localhost:8000/api/get_cart_items_info', {\n          user_email: userEmail,\n        });\n        const cartItemsData = cartItemsResponse.data.cart_items_info;\n\n        let totalQuantity = 0;\n        let totalPrice = 0;\n\n        // Fetch product info for each cart item\n        for (const item of cartItemsData) {\n          const productInfoResponse = await axios.post('http://localhost:8000/api/get_product_info', {\n            product_id: item.product_id,\n            category: item.category,\n          });\n          const productInfo = productInfoResponse.data;\n          item.name = productInfo.name;\n          item.url = productInfo.url;\n          item.price = productInfo.price;\n\n          totalQuantity += item.quantity;\n          totalPrice += item.price * item.quantity;\n        }\n\n        setTotalQuantity(totalQuantity);\n        setTotalPrice(totalPrice);\n        setCartItems(cartItemsData);\n      } catch (error) {\n        console.error('Error fetching cart items:', error);\n      }\n    };\n\n    fetchCartItems(); // Call fetchCartItems when the component mounts\n  }, []);\n\n  const handlePayment = async () => {\n    if (!paymentMode) {\n      alert('Please select a payment mode.');\n      return;\n    }\n\n    try {\n      const userEmail = localStorage.getItem('user_email');\n      const response = await axios.post('http://localhost:8000/api/remove_product_quantity', {\n        user_email: userEmail\n      });\n      if (response.data.message) {\n        alert('Payment successful!');\n        navigate('/Home');\n      }\n    } catch (error) {\n      console.error('Error processing payment:', error);\n    }\n  };\n\n  const handleCancelPayment = () => {\n    navigate('/Cart');\n  };\n\n  return (\n    <>\n    </>\n    \n  );\n}\n\nexport default Payment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}