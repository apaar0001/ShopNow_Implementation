{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { FaHeart, FaUser, FaShoppingCart, FaSearch } from 'react-icons/fa';\nimport { useNavigate } from 'react-router-dom';\nimport './Home.css';\nfunction Home() {\n  _s();\n  const navigate = useNavigate();\n  const [products, setProducts] = useState({\n    electronics: [],\n    decorations: [],\n    clothing: []\n  });\n  const [cartItems, setCartItems] = useState({});\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/products/');\n        setProducts(response.data);\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    };\n    fetchProducts();\n  }, []);\n  useEffect(() => {\n    const fetchCartQuantities = async () => {\n      const userEmail = localStorage.getItem('user_email');\n      if (!userEmail) return;\n      const updatedCartItems = {};\n      for (const category in products) {\n        updatedCartItems[category] = {};\n        for (const product of products[category]) {\n          const quantity = await fetchCartItemQuantities(product.id, category);\n          updatedCartItems[category][product.id] = quantity;\n        }\n      }\n      setCartItems(updatedCartItems);\n    };\n    fetchCartQuantities();\n  }, [products]); // Run this effect when products change\n\n  const fetchCartItemQuantities = async (productId, category) => {\n    try {\n      const userEmail = localStorage.getItem('user_email');\n      const response = await axios.post('http://localhost:8000/api/get_cart_quantity/', {\n        user_email: userEmail,\n        product_id: productId,\n        category: category\n      });\n      return response.data.quantity;\n    } catch (error) {\n      console.error('Error fetching cart item quantity:', error);\n      return 0; // Return default quantity if fetching fails\n    }\n  };\n  const handleAddToCart = async product => {\n    const productName = product.name;\n    const productId = product.id; // Assuming products have an 'id' property\n    const userEmail = localStorage.getItem('user_email');\n    if (!userEmail) return;\n    const category = getCategoryForProduct(productName);\n    const maxQuantity = getMaxQuantity(product.id, category);\n    const currentQuantity = cartItems[category] && cartItems[category][product.id];\n    if (currentQuantity && currentQuantity >= maxQuantity) {\n      alert('All items in this category are taken.');\n      return;\n    }\n    try {\n      await axios.post('http://localhost:8000/api/add_to_cart/', {\n        user_email: userEmail,\n        category: category,\n        product_id: productId,\n        quantity: '1' // Default quantity when adding to cart\n      });\n      console.log('Item added to cart successfully');\n      const quantity = await fetchCartItemQuantities(productId, category);\n      setCartItems(prevItems => ({\n        ...prevItems,\n        [category]: {\n          ...prevItems[category],\n          [productId]: quantity\n        }\n      }));\n    } catch (error) {\n      console.error('Error adding item to cart:', error);\n    }\n  };\n  const getMaxQuantity = (productId, category) => {\n    // Mocked function, replace with your actual logic to get max quantity\n    return 3; // Example: Max quantity for each product in a category is 3\n  };\n  const getCategoryForProduct = productName => {\n    // Implement logic to get category based on product name\n    // This is just a placeholder, replace it with your actual logic\n    if (products.electronics.some(product => product.name === productName)) {\n      return 'electronics';\n    } else if (products.decorations.some(product => product.name === productName)) {\n      return 'decorations';\n    } else if (products.clothing.some(product => product.name === productName)) {\n      return 'clothing';\n    }\n    return 'unknown'; // Default category if not found\n  };\n\n  // Remaining code for rendering products and handling UI interactions\n}\n_s(Home, \"MpHwCnt9jPNXW+S8wKkGCWQG9u0=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","FaHeart","FaUser","FaShoppingCart","FaSearch","useNavigate","Home","_s","navigate","products","setProducts","electronics","decorations","clothing","cartItems","setCartItems","fetchProducts","response","get","data","error","console","fetchCartQuantities","userEmail","localStorage","getItem","updatedCartItems","category","product","quantity","fetchCartItemQuantities","id","productId","post","user_email","product_id","handleAddToCart","productName","name","getCategoryForProduct","maxQuantity","getMaxQuantity","currentQuantity","alert","log","prevItems","some","_c","$RefreshReg$"],"sources":["/home/piyush/AUTH_SYSTEM/frontend/src/Components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { FaHeart, FaUser, FaShoppingCart, FaSearch } from 'react-icons/fa';\nimport { useNavigate } from 'react-router-dom';\nimport './Home.css';\n\nfunction Home() {\n  const navigate = useNavigate();\n  const [products, setProducts] = useState({ electronics: [], decorations: [], clothing: [] });\n  const [cartItems, setCartItems] = useState({});\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/products/');\n        setProducts(response.data);\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    };\n\n    fetchProducts();\n  }, []);\n\n  useEffect(() => {\n    const fetchCartQuantities = async () => {\n      const userEmail = localStorage.getItem('user_email');\n      if (!userEmail) return;\n\n      const updatedCartItems = {};\n      for (const category in products) {\n        updatedCartItems[category] = {};\n        for (const product of products[category]) {\n          const quantity = await fetchCartItemQuantities(product.id, category);\n          updatedCartItems[category][product.id] = quantity;\n        }\n      }\n      setCartItems(updatedCartItems);\n    };\n\n    fetchCartQuantities();\n  }, [products]); // Run this effect when products change\n\n  const fetchCartItemQuantities = async (productId, category) => {\n    try {\n      const userEmail = localStorage.getItem('user_email');\n      const response = await axios.post('http://localhost:8000/api/get_cart_quantity/', {\n        user_email: userEmail,\n        product_id: productId,\n        category: category,\n      });\n      return response.data.quantity;\n    } catch (error) {\n      console.error('Error fetching cart item quantity:', error);\n      return 0; // Return default quantity if fetching fails\n    }\n  };\n\n  const handleAddToCart = async (product) => {\n    const productName = product.name;\n    const productId = product.id; // Assuming products have an 'id' property\n    const userEmail = localStorage.getItem('user_email');\n    if (!userEmail) return;\n\n    const category = getCategoryForProduct(productName);\n    const maxQuantity = getMaxQuantity(product.id, category);\n    const currentQuantity = cartItems[category] && cartItems[category][product.id];\n\n    if (currentQuantity && currentQuantity >= maxQuantity) {\n      alert('All items in this category are taken.');\n      return;\n    }\n\n    try {\n      await axios.post('http://localhost:8000/api/add_to_cart/', {\n        user_email: userEmail,\n        category: category,\n        product_id: productId,\n        quantity: '1', // Default quantity when adding to cart\n      });\n      console.log('Item added to cart successfully');\n      const quantity = await fetchCartItemQuantities(productId, category);\n      setCartItems((prevItems) => ({\n        ...prevItems,\n        [category]: {\n          ...prevItems[category],\n          [productId]: quantity,\n        },\n      }));\n    } catch (error) {\n      console.error('Error adding item to cart:', error);\n    }\n  };\n\n  const getMaxQuantity = (productId, category) => {\n    // Mocked function, replace with your actual logic to get max quantity\n    return 3; // Example: Max quantity for each product in a category is 3\n  };\n\n  const getCategoryForProduct = (productName) => {\n    // Implement logic to get category based on product name\n    // This is just a placeholder, replace it with your actual logic\n    if (products.electronics.some((product) => product.name === productName)) {\n      return 'electronics';\n    } else if (products.decorations.some((product) => product.name === productName)) {\n      return 'decorations';\n    } else if (products.clothing.some((product) => product.name === productName)) {\n      return 'clothing';\n    }\n    return 'unknown'; // Default category if not found\n  };\n\n  // Remaining code for rendering products and handling UI interactions\n}\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}