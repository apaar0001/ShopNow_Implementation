{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './AdminHome.css'; // Import the CSS file for styling\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminHome() {\n  _s();\n  const [productId, setProductId] = useState('');\n  const [category, setCategory] = useState('');\n  const [productDetails, setProductDetails] = useState(null);\n  const [newPrice, setNewPrice] = useState('');\n  const [newQuantity, setNewQuantity] = useState('');\n  const handleSearch = async () => {\n    try {\n      const response = await axios.post('http://localhost:8000/api/get_product_info', {\n        product_id: productId,\n        category: category\n      });\n      setProductDetails(response.data);\n    } catch (error) {\n      console.error('Error fetching product details:', error);\n    }\n  };\n  const handleApplyChanges = async () => {\n    try {\n      const priceResponse = await axios.post('http://localhost:8000/api/change_product_price', {\n        product_id: productId,\n        category: category,\n        new_price: newPrice\n      });\n      const quantityResponse = await axios.post('http://localhost:8000/api/change_product_quantity', {\n        product_id: productId,\n        category: category,\n        new_quantity: newQuantity\n      });\n\n      // Update product details with new values\n      setProductDetails(prevDetails => ({\n        ...prevDetails,\n        price: parseFloat(newPrice),\n        // Assuming backend returns the new price\n        quantity: parseInt(newQuantity) // Assuming backend returns the new quantity\n      }));\n\n      // Reset form fields after successful changes\n      setNewPrice('');\n      setNewQuantity('');\n    } catch (error) {\n      console.error('Error applying changes:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(AdminHome, \"7mtKEhp9vhwOIOPXyViAlllvUBM=\");\n_c = AdminHome;\nexport default AdminHome;\nvar _c;\n$RefreshReg$(_c, \"AdminHome\");","map":{"version":3,"names":["React","useState","axios","Fragment","_Fragment","jsxDEV","_jsxDEV","AdminHome","_s","productId","setProductId","category","setCategory","productDetails","setProductDetails","newPrice","setNewPrice","newQuantity","setNewQuantity","handleSearch","response","post","product_id","data","error","console","handleApplyChanges","priceResponse","new_price","quantityResponse","new_quantity","prevDetails","price","parseFloat","quantity","parseInt","_c","$RefreshReg$"],"sources":["/home/piyush/AUTH_SYSTEM/frontend/src/Components/AdminHome.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './AdminHome.css'; // Import the CSS file for styling\n\nfunction AdminHome() {\n  const [productId, setProductId] = useState('');\n  const [category, setCategory] = useState('');\n  const [productDetails, setProductDetails] = useState(null);\n  const [newPrice, setNewPrice] = useState('');\n  const [newQuantity, setNewQuantity] = useState('');\n\n  const handleSearch = async () => {\n    try {\n      const response = await axios.post('http://localhost:8000/api/get_product_info', {\n        product_id: productId,\n        category: category,\n      });\n      setProductDetails(response.data);\n    } catch (error) {\n      console.error('Error fetching product details:', error);\n    }\n  };\n\n  const handleApplyChanges = async () => {\n    try {\n      const priceResponse = await axios.post('http://localhost:8000/api/change_product_price', {\n        product_id: productId,\n        category: category,\n        new_price: newPrice,\n      });\n      const quantityResponse = await axios.post('http://localhost:8000/api/change_product_quantity', {\n        product_id: productId,\n        category: category,\n        new_quantity: newQuantity,\n      });\n\n      // Update product details with new values\n      setProductDetails((prevDetails) => ({\n        ...prevDetails,\n        price: parseFloat(newPrice), // Assuming backend returns the new price\n        quantity: parseInt(newQuantity), // Assuming backend returns the new quantity\n      }));\n\n      // Reset form fields after successful changes\n      setNewPrice('');\n      setNewQuantity('');\n    } catch (error) {\n      console.error('Error applying changes:', error);\n    }\n  };\n\n  return (\n    <>\n    </>\n    \n  );\n}\n\nexport default AdminHome;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMkB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,4CAA4C,EAAE;QAC9EC,UAAU,EAAEb,SAAS;QACrBE,QAAQ,EAAEA;MACZ,CAAC,CAAC;MACFG,iBAAiB,CAACM,QAAQ,CAACG,IAAI,CAAC;IAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;EAED,MAAME,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMC,aAAa,GAAG,MAAMzB,KAAK,CAACmB,IAAI,CAAC,gDAAgD,EAAE;QACvFC,UAAU,EAAEb,SAAS;QACrBE,QAAQ,EAAEA,QAAQ;QAClBiB,SAAS,EAAEb;MACb,CAAC,CAAC;MACF,MAAMc,gBAAgB,GAAG,MAAM3B,KAAK,CAACmB,IAAI,CAAC,mDAAmD,EAAE;QAC7FC,UAAU,EAAEb,SAAS;QACrBE,QAAQ,EAAEA,QAAQ;QAClBmB,YAAY,EAAEb;MAChB,CAAC,CAAC;;MAEF;MACAH,iBAAiB,CAAEiB,WAAW,KAAM;QAClC,GAAGA,WAAW;QACdC,KAAK,EAAEC,UAAU,CAAClB,QAAQ,CAAC;QAAE;QAC7BmB,QAAQ,EAAEC,QAAQ,CAAClB,WAAW,CAAC,CAAE;MACnC,CAAC,CAAC,CAAC;;MAEH;MACAD,WAAW,CAAC,EAAE,CAAC;MACfE,cAAc,CAAC,EAAE,CAAC;IACpB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,oBACElB,OAAA,CAAAF,SAAA,mBACE,CAAC;AAGP;AAACI,EAAA,CApDQD,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAsDlB,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}